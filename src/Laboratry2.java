import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class Laboratry2 extends JFrame {

    private JPanel panel1;
    private JLabel main_label;
    private JPanel mainlabel_panel;
    private JPanel panel_jtext;
    private JPanel panel_button;
    private JTextField text_order;
    private JTextField text_price;
    private JPanel order_panel;
    private JPanel price_panel;
    private JButton main_button;
    private JLabel order;
    private JLabel price;
    private final int WIDTH = 500;
    private final int HEIGHT = 300;


    public Laboratry2() {
        $$$setupUI$$$();

        panel_jtext.setPreferredSize(new Dimension(WIDTH, 50));

        setSize(WIDTH, HEIGHT);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);

        add(panel1);
        setVisible(true);
    }

    public static void main(String[] args) {
        new Laboratry2();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        panel_jtext = new JPanel();
        panel_jtext.setLayout(new GridBagLayout());
        panel_jtext.setMaximumSize(new Dimension(2147483647, 2147483647));
        panel1.add(panel_jtext, BorderLayout.CENTER);
        order_panel = new JPanel();
        order_panel.setLayout(new BorderLayout(0, 0));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel_jtext.add(order_panel, gbc);
        order_panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        order = new JLabel();
        order.setText("Количество порций");
        order_panel.add(order, BorderLayout.WEST);
        text_order = new JTextField();
        text_order.setText("");
        order_panel.add(text_order, BorderLayout.CENTER);
        price_panel = new JPanel();
        price_panel.setLayout(new BorderLayout(0, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel_jtext.add(price_panel, gbc);
        price_panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        price = new JLabel();
        price.setText("Цена за 1 шт");
        price_panel.add(price, BorderLayout.WEST);
        text_price = new JTextField();
        text_price.setHorizontalAlignment(10);
        text_price.setText("");
        price_panel.add(text_price, BorderLayout.CENTER);
        mainlabel_panel = new JPanel();
        mainlabel_panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel_jtext.add(mainlabel_panel, gbc);
        main_label = new JLabel();
        main_label.setText("Labelf fsdfsd fds fdsfdsf");
        main_label.setVerticalAlignment(0);
        mainlabel_panel.add(main_label);
        panel_button = new JPanel();
        panel_button.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        panel_jtext.add(panel_button, gbc);
        main_button = new JButton();
        main_button.setText("Button");
        panel_button.add(main_button);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }


    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
